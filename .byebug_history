c
@events.bookings_count
@events.bookings
@user.bookings_count
c
@user.bookings_count
@user.bookings
c
@user.bookings_count
@user.bookings
c
user = User.find(self.user_id)
user.save!
user.update_attributes!({:bookings_count => 3})
user = User.find(self.user_id)
n
c
user.update_attributes!({:bookings_count => 3})
user.update_attributes!(:bookings_count => 3)
user = User.find(self.user_id)
user.save
User.find(7)
user
user.save!
user.bookings_count = Booking.where({:going_id => true, :user_id =>self.user_id }).count
user = User.find(self.user_id)
user = User.find(self.user_id
n
c
@user.bookings_count
c
user
n
user
n
c
@user.bookings_count
c
User.find(7)
self.user
self.user.save!
self.user
n
self.user
n
c
User.find(9)
self.user
self.user.save!
User.find(9)
self.user
self.user.save
n
selfn
Booking.where({:going_id => true, :user_id =>self.user_id }).count
self.user
self
c
@user.bookings
@user
@user.bookings_count
c
 Booking.where({:going_id => true, :user_id =>self.user_id }).count
self.event.bookings_count
c
@user.bookings_count
@user.bookings
c
User.find_by_remember_token(cookies[:remember_token])
c
User.find_by_remember_token(cookies[:remember_token])
c
User.find_by_remember_token(cookies[:remember_token])
c
@user
@user.bookings
c
User.find_by_remember_token(cookies[:remember_token])
@current_user
c
User.find_by_remember_token(cookies[:remember_token])
cookies[:remember_token]
@current_user
c
user
c
@current_user
User.find_by_remember_token(cookies[:remember_token])
cookies[:remember_token]
c
@user.bookings_count
@user.bookings
c
@user.save!
user.save!
@user
c
current_user
c
@user
@user.bookings_count
c
@user.bookings_count
@user.bookings
c
@event.update_attributes!(params[:event])
@event
c
 Rails.logger.info(@event.errors.messages.inspect)
c
@event.update_attributes(params[:event])
@event
params[:event]
@event.update_attributes(params[:event])
@event=Event.find(params[:id])
params
c
@event
params
@event.update_attributes(params[:event])
@event=Event.find(params[:id])
c
user.update_attribute(:password, params[:user][:password_confirmation])
user.update_attribute(user[:password], params[:user][:password_confirmation])
params
user = User.find(params[:id]) 
c
user[:password]=params[:user][:password]
user.update(user[:password],params[:user][:password])
user.update_attribute(user[:password],params[:user][:password])
c
 params[:user][:password] == params[:user][:password_confirmation]
if params[:user][:password] == params[:user][:password_confirmation]
if params[:password] == params[:password_confirmation]
 user.authenticate(params[:user][:old_password])
user.try(:authenticate, params[:user][:old_password])
 user = User.find(params[:id]) 
user.try(:authenticate, params[:user][:old_password])
user..try(:authenticate, params[:current_password])params[:user][:old_password]
params[:user][:old_password]
user.authenticate(params[:user][:old_password])
c
BCrypt::Password.create(params[:password])
params[:password] == params[:password_confirmation]
user.authenticate(params[:old_password])
user
 user = User.find(params[:id]) 
c
params
c
end
render 'new'
flash.now[:error] = 'Invalid email/password combination'
 user.authenticate(params[:session][:password])
c
user
c
@user
c
n
@bookings.class
@bookings
c
locals
c
@events 
c
@events
c
@events=@category.events
 @category=Category.find(params[:category][:category_id] )
Category.find(params[:category][:category_id] )
params.has_key?(:category)
c
params.has_key?(:category)
if params[:category]
c
params[:category].present
@events
Category.find(params[:category][:category_id] )
params[:category][:category_id]
params[:category][:category:id]
@category
c
@category_id
@events
c
default
 @category_id
c
@events
c
@events
params[:category][:category_id]
c
params[:category][:category_id]
params
c
params
c
params
c
events_path
params
c
new_event_path
events_path
c
params
c
events_path
c
params
c
params
c
x = Booking.new
params[:is_going]
params
c
params
c
@is_going
@is_going=params[:is_going]
c
 redirect_to @categories
@category
@category.update_attributes(params[:category])
@category = Category.find(params[:id])
c
@booking.update_attribute(:user_id, params[:user_id])
@booking
@booking.update_attribute(:user_id, params[:user_id])
@booking.update_attribute(:event_id, params[:event_id])
 @booking.update_attribute(:going_id, params[:is_going])
@booking = Booking.new
c
 @booking.update_attribute(:is_going, params[:is_going])
@booking = Booking.new
c
@booking = Booking.new(params[:is_going])
@booking.update_attribute(:event_id, params[:event_id])
c
params
c
params
c
event.id
current_user.id
event
c
params
c
@user
@user.update_attribute(:admin, params[:is_admin])
params
